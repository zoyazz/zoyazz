Title 'Diversity Data';
proc import datafile="/home/u63740426/STA441/DiversityExplore.xlsx"
	out= DiversityEx dbms=xlsx replace;
	getnames=yes;
	
proc import datafile="/home/u63740426/STA441/DiversityReplic.xlsx"
	out= DiversityRep dbms=xlsx replace;
	getnames=yes;
	
	
data Diversity;
	/*********************** cleaning data **************************/
	/* making new variables */
	set DiversityEx;
	
	/*if SM1 >5 then SM1 = .; if SM2 >5 then SM2 = .; if SM3 >5 then SM3 = .; */
	
	cmmt = sum(of com1-com10);
	label cmmt = 'sum of commitment';
	rlnC = sum(of RelC1 - RelC5);
	label rlnC = 'sum of relations with colleagues';
	rlnM = sum(of RelM1 - RelM12);
	label rlnM = 'sum of relations with managers';
	fair = sum(of Fair1 - Fair6);
	label fair = 'sum of fair oppurtunites for advancement';
	satis = sum(of Sat1 - Sat4);
	label satis = 'sum of satisfaction';
	cmmtM = sum(of SM1 - SM3);
	label cmmtM = 'sum of managers commitment';
	
	/* changing to numeric values */
	age1 = input(Age, 8.); label age1 = 'age';
	gen = input(Gender, 8.); label gen = 'gender 0=M 1=F'; 
	VisMinority1 = input(visMinority, 8.); label VisMinority1 = 'Visible Minority';
	educLvl = input(EDUCLevel, 8.); label educLvl = 'education level';
	Marital = input(MaritalStatus, 8.);
	Canad = input(CAN_Foreign_Born, 8.); label Canad = 'Born in Canada = 1';
	
	/* making indicator variables for married or single */
	if Marital = . then m1 = .; else if Marital = 2 then m1 = 1; else m1 = 0;
	label m1 = 'Married =1';
	
	keep id cmmt rlnC rlnM fair satis cmmtM age1 gen VisMinority1 educlvl Marital Canad m1;
	
data DiversityRep;
	/* making new variables */
	set DiversityRep;
	
	rlnC = sum(of RelC1 - RelC5);
	label rlnC = 'sum of relations with colleagues';
	rlnM = sum(of RelM1 - RelM12);
	label rlnM = 'sum of relations with managers';
	fair = sum(of Fair1 - Fair6);
	label fair = 'sum of fair oppurtunites for advancement';
	satis = sum(of Sat1 - Sat4);
	label satis = 'sum of satisfaction';
	VisMinority1 = input(visMinority, 8.); label VisMinority1 = 'Visible Minority';
	
	keep id rlnC rlnM fair satis VisMinority1;

proc Freq data= diversity; 	
	title3 'Frequency table of Qualitative Variables';
	tables gen VisMinority1 educlvl m1 Canad;
	
proc Means n mean std min max data=diversity; 
	title3 'Simple Statistics for Quantitative Variabels';
	var age1 cmmt rlnC rlnM fair satis cmmtM educlvl;
	
proc freq data=diversity;
	title3 'marital status and gender';
	tables m1*gen / norow chisq expected ;
	
proc corr data=diversity;
	title3 'Correlation matrix';
	var age1 cmmt rlnC rlnM fair satis cmmtM educlvl;
	
proc Means n mean std min max data=diversity; 
	title3 'mean education by minority';
	class VisMinority1;
	var educLvl;

proc glm plots=none data=diversity;
	title3 'mean education by minority';
	model educLvl = VisMinority1;
	
proc reg data=diversity;
	title3 'Analysis of Variance: Determining signficant factors';
	model satis = rlnC rlnM fair cmmtM gen VisMinority1 educLvl m1 age1 Canad;
	title3 'Checking if any removed varaibles are signficant';
	insig_var: test cmmtM =gen =educLvl =m1 =age1 =Canad=0;
	
proc iml; 
	 title3 'Proportion of remaining variation explained by removed variables: ';
     n = 438; p = 11; s = 6; 
     F = 1.12 ;  a = s*F/(n-p + s*F);
     print a;
	
proc reg plots=none data=DiversityRep;
	title3 'Big Regression Analysis for replication data';
	model satis = rlnC rlnM fair VisMinority1;
	
run;

Title 'Diversity Data: Training the model';

proc import datafile="/home/u63740426/STA441/DiversityExplore.xlsx"
	out= DiversityExp dbms=xlsx replace;
	getnames=yes;

proc import datafile="/home/u63740426/STA441/DiversityReplic.xlsx"
	out= DiversityRep1 dbms=xlsx replace;
	getnames=yes;

data Diversity;
	/* making new variables */
	set DiversityExp;
	
	rlnC = sum(of RelC1 - RelC5);
	label rlnC = 'sum of relations with colleagues';
	rlnM = sum(of RelM1 - RelM12);
	label rlnM = 'sum of relations with managers';
	fair = sum(of Fair1 - Fair6);
	label fair = 'sum of fair oppurtunites for advancement';
	satis = sum(of Sat1 - Sat4);
	label satis = 'sum of satisfaction';
	VisMinority1 = input(visMinority, 8.); label VisMinority1 = 'Visible Minority';
	sample = 1;
	keep id rlnC rlnM fair satis VisMinority1;

data DiversityRep;
	/* making new variables */
	set DiversityRep1;
	
	rlnC = sum(of RelC1 - RelC5);
	label rlnC = 'sum of relations with colleagues';
	rlnM = sum(of RelM1 - RelM12);
	label rlnM = 'sum of relations with managers';
	fair = sum(of Fair1 - Fair6);
	label fair = 'sum of fair oppurtunites for advancement';
	satis = sum(of Sat1 - Sat4);
	label satis = 'sum of satisfaction';
	VisMinority1 = input(visMinority, 8.); label VisMinority1 = 'Visible Minority';
	satis2 = satis; /* storing data for later use */
	/* the replicated data is missing now */
	satis = .;
	keep id rlnC rlnM fair satis VisMinority1 satis2;
	
data joint;
	set diversity DiversityRep;

proc reg plots=none data=joint;
	title3 'Model for Job Satisfaction (Explanatory Data)';
	/* model only trained on original data and not replicated data */
	model satis = rlnC rlnM fair VisMinority1;
	
proc reg noprint data=joint;
     title3 'Fit Model I to predict new job satisfaction data';
     model satis = rlnC rlnM fair VisMinority1;
     output out = predict    predicted = PredictedY
                             L95       = LowerLimit
                             U95       = UpperLimit;

proc print data= predict(obs=10);
	title3 'Predictions for replication data';
	/* since replication data starts from line 501, filtering to only those lines in model */
	var id rlnC rlnM fair VisMinority1 satis2 PredictedY LowerLimit UpperLimit;
	WHERE id > 500;

data predict2;
	set predict;
	/* checking if replicated values are inside confidence interval and predicted correctly */
	if LowerLimit < satis2 < UpperLimit then interval = 'Y'; else if PredictedY =. then interval = ' ';
	else interval = 'N'; where id >500;
	
data predict3;
	set predict;
	/* checking if original values are inside confidence interval and predicted correctly */
	if LowerLimit < satis < UpperLimit then interval = 'Y'; else if PredictedY =. then interval = ' ';
	else interval = 'N'; where id < 501;
	
data predict4;
	set predict3 predict2;
	if id > 500 then sample = 2; else sample = 1;
	label sample = "1 = original data 2 = replicated data";


proc freq data=predict4;
	title3 'How many values were captured in interval?';
	title4 'accuracy of 94.19%';
	tables interval*sample;
